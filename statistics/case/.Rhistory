#Space
s <- 10
#Margin
m <- 0
#Columns
c <- 16
#Range
n <- 1:c
n * (g / c) - (s)
#Grid
g <- 960
#Space
s <- 10
#Margin
m <- 0
#Columns
c <- 16
#Range
n <- 1:c
n * (g / c)
#Grid
g <- 960
#Space
s <- 10
#Margin
m <- 0
#Columns
c <- 16
#Range
n <- 1:c
n * (g / c) - (s * 2)
#Grid
g <- 960
#Space
s <- 10
#Margin
m <- 0
#Columns
c <- 16
#Range
n <- 1:c
n * (g / c)
#Grid
g <- 960
#Space
s <- 10
#Margin
m <- 0
#Columns
c <- 16
#Range
n <- 1:c
n * (g / c)
40*15*10
40 * 16
10 * 15
40 * 16 + 10 * 15
40 * 16 + 10 * 16
50 * 16 + 10 * 16
g <- 50 * 16 + 10 * 16 | 960
g
s * c
g - s * c
g - (s * c)
#Grid
g <- 50 * 16 + 10 * 16 #| 960
#Space
s <- 10
#Margin
m <- 0
#Columns
c <- 16
#Range
n <- 1:c
g - (s * c)
g - (s * c)
g - (s * c) / c
(g - (s * c)) / c
50*16
(g - (s * c)) / c
1:50
#Grid
g <- 50 * 16 + 10 * 16 #| 960
#Space
s <- 10
#Margin
m <- 0
#Columns
c <- 16
#Range
n <- 1:c
#Column size
cs <- (g - (s * c)) / c
15*10 + cs * 5
cs <- (g - (s * c)) / c
40*16
40 * 16 + 10 * 16
40 * 16 + 10 * 15
s * 2 * c - 1
(c - 1)
s * 2 * (c - 1)
(g - (s * 2 * (c - 1) )
g - (s * 2 * (c - 1) )
g - (s * 2 * (c - 1) )
(g - (s * 2 * (c - 1) ) / c
(g - (s * 2 * (c - 1) ) / c
g - (s * 2 * (c - 1) ) / c
g - (s * 2 * (c - 1) ) / c
(s * 2 * (c - 1) ) / c
(s * 2) * (c - 1)
(s * 2) * (c - 1)
g - (s * 2) * (c - 1)
g - (s * 2) * (c - 1) / c
(g - (s * 2) * (c - 1)) / c
(g - (s * 2) * (c - 1)) / c - 1
9/16
g/16
(g/n) - (s * 2)
(g/c) - (s * 2)
n * b - s * 2
#Grid
g <- 50 * 16 + 10 * 16 #| 960
#Space
s <- 10
#Margin
m <- 0
#Columns
c <- 16
#Range
n <- 1:c
b <- g / c
n * b - s * 2
#Grid
g <- 50 * 16 + 10 * 16 #| 960
#Space
s <- 10
#Margin
m <- 0
#Columns
c <- 16
#Range
n <- 1:c
b <- g / c
n * b - s * 3
#Grid
g <- 50 * 16 + 10 * 16 #| 960
#Space
s <- 10
#Margin
m <- 0
#Columns
c <- 16
#Range
n <- 1:c
b <- g / c
n * b - s * 2
#Grid
g <- 50 * 16 + 10 * 16 #| 960
#Space
s <- 10
#Margin
m <- 0
#Columns
c <- 16
#Range
n <- 0:c
b <- g / c
n * b - s * 2
#Grid
g <- 50 * 16 + 10 * 16 #| 960
#Space
s <- 10
#Margin
m <- 0
#Columns
c <- 16
#Range
n <- 0:c
b <- g / c
n * b - s * 2 + 20
#Grid
g <- 50 * 16 + 10 * 16 #| 960
#Space
s <- 10
#Margin
m <- 0
#Columns
c <- 16
#Range
n <- 0:c
b <- 50
n * b - s * 2 + 20
#Grid
g <- 50 * 16 + 10 * 16 #| 960
#Space
s <- 10
#Margin
m <- 0
#Columns
c <- 16
#Range
n <- 0:c
b <- 50
n * b - s * 2
f = 960
n = 1
c = 16
g = 10
f = n(c) + n-1(g)
n-1(g)
n*c + n-1*g
f = 960
n = 1:16
c = 16
g = 10
f = n*c + n-1*g
f
?dbinom
dbinom(1,25,0.25)
dbinom(1,25,0.25) * 100
1.0 * 100
0.1 * 100
0.006271195 * 100
p1 <- dbinom(1,25,0.25)
p1 * 100
dbinom(12,20,1/3)
p2 <- dbinom(12,20,1/3)
p2 * 100
p2
p1 <- dbinom(1,25,0.25)
p1
dbinom(12,20,1/3)
dbinom(48,50,1/100)
1-dbinom(48,50,1/100)
dbinom(48,50,1-(1/100))
p3 <- dbinom(48,50,1-(1/100)) #0.07561804
p3 * 100
pbinom(5,3,1/6)
pbinom(1,3,1/6)
pbinom(6,3,1/6)
dbinom(c(5,6),3,1/6)
1/6
dbinom(c(5,6),3,1/6)
pbinom(4,3,1/6)
dbinom(5:6,3,1/6)
dbinom(2,3,1/6)
barplot(dbinom(0:8,8,0.3))
barplot(dbinom(0:8,8,0.3))
barplot(dbinom(0:8,8,0.3))
dbinom(1:2,3,1/6)
dbinom(1:2,3,1/6)
barplot( dbinom(1:2,3,1/6) )
barplot( dbinom(0:1,3,1/6) )
dbinom(0:1,3,1/6)
dbinom(1,500,1/5)
1/5
1/5*500
60 * 1/3
sd1 <- sqrt( 60*1/3*(1-1/3) )
sd1
10 * 1/6
60 * 1/3
10 * 1/6
qrt( 10*1/6*(1-1/6) )
sqrt( 10*1/6*(1-1/6) )
40 * 0.16
sqrt( 40*0.16*(1-0.16) )
0.8*15
sqrt( c(12,15)*0/8*(1-0.8) )
sqrt( c(12,15)*0.8*(1-0.8) )
p8 <- dbinom(400,500,0.75)
p8
p8 * 100
3/4
p8 <- pbinom(400,500,1-0.75)
p8
sum(c(4,7,2))
pbinom(q=3, size=,20, prob=1/6, lower.tail=T)
pbinom(q=3, size=,20, prob=1/6)
pbinom(q=3, size=,20, prob=1/6, lower.tail=F)
ppois(q=12, lambda=7, lower.tail=F)
ppois(q=12, lambda=7, lower.tail=T)
ppois(q=12, lambda=7)
dpois(x=4,lambda=7)
dpois(x=4,lambda=4)
e3 <- ppois(x=6,lambda=4,lower.tail=F)
e3 <- ppois(q=6,lambda=4,lower.tail=F)
e3
e3 <- ppois(q=6,lambda=4,lower.tail=T)
e4 <- ppois(q=6,lambda=4,lower.tail=T)
e4
?ppois
ppois(q=6,lambda=4)
ppois(q=6,lambda=4)
e4 <- ppois(q=6,lambda=4)
dpois(x=0:6,lambda=4)
sum( dpois(x=0:6,lambda=4) )
dpois(x=4,lambda=4)
ppois(q=6,lambda=4)
ppois(q=1, lambda=4)
1-ppois(q=1, lambda=4)
setwd("C:/Users/Wim/Desktop/data_science/statistics/case")
train <- read.csv("train.csv")
train
View(train)
#Import the dataset
train <- read.csv("train.csv")
barplot(train$Survived ~ train$Pclass)
train$Pclass
train$Survived
train <- read.csv("train.csv")
barplot(as.vector(train$Survived) ~ as.vector(train$Pclass))
train$Survived
str(train$Survived)
?barplot
train$Pclass
train$Survived <- as.numeric(train$Survived)
train$Pclass <- as.numeric(train$Pclass)
barplot(train$Survived) ~ train$Pclass)
barplot(train$Survived ~ train$Pclass)
train[train$Survived==1,]
train$Survived==1
survivors <- train[train$Survived==1,]
survivors
str(survivors)
barplot(survivors)
barplot(survivors$Pclass)
barplot(survivors$Pclass, beside=T)
barplot(survivors$Pclass, beside=F)
factor(survivors$Pclass)
levels(survivors$Pclass)
levels(factor(survivors$Pclass))
barplot(c(1,2,3))
survivors[survivors$Pclass==1,]
barplot(c(
survivors[survivors$Pclass==1,],
survivors[survivors$Pclass==2,],
survivors[survivors$Pclass==3,]
))
sum(survivors[survivors$Pclass==1,])
#Import the dataset
train <- read.csv("train.csv")
train <- as.data.frame(train)
#Find all survivors
survivors <- train[train$Survived==1,]
survivors
levels(factor(survivors$Pclass))
survivors[survivors$Pclass==1,]
sum(survivors[survivors$Pclass==1,])
barplot(c(
survivors[survivors$Pclass==1,],
survivors[survivors$Pclass==2,],
survivors[survivors$Pclass==3,]
))
survivors[survivors$Pclass==1,]
sum(as.numeric(survivors[survivors$Pclass==1,])
sum(as.numeric(survivors[survivors$Pclass==1,]))
train <- read.csv("train.csv", header=T)
train <- as.data.frame(train)
train
train[train$Survived==1,]
levels(factor(survivors$Pclass))
survivors[survivors$Pclass==1,]
aggregate(train$Survived ~ train$Pclass, train$Pclass, FUN=sum)
train <- read.csv("train.csv", header=T)
train <- as.data.frame(train)
aggregate(train$Survived ~ train$Pclass, train$Pclass, FUN=sum)
survivors$Pclass==1
sum(survivors$Pclass==1)
barplot(c(
sum(survivors$Pclass==1),
sum(survivors$Pclass==2),
sum(survivors$Pclass==3)
))
length(survivors)
size(survivors)
sum(survivors)
sum(
survivors$Pclass==1 +
survivors$Pclass==2 +
survivors$Pclass==3
)
sum(
survivors$Pclass==1,
survivors$Pclass==2,
survivors$Pclass==3
)
?barplot
barplot(
height = c(
sum(survivors$Pclass==1),
sum(survivors$Pclass==2),
sum(survivors$Pclass==3)
),
names.arg=c(
"1","2","3"
)
)
?barplot
barplot(
height = c(
sum(survivors$Pclass==1),
sum(survivors$Pclass==2),
sum(survivors$Pclass==3)
),
names.arg=c(
"1st","2nd","3rd"
),
xlab="Passenger Classes",ylab="Amount of survivors",
main="Survivors Titanic from each Passenger Class"
)
train[train$Survived==0,]
deceased <- train[train$Survived==0,]
levels(factor(deceased$Pclass))
sum(deceased)
deceased <- train[train$Survived==0,]
deceased <- train[train$Survived==0,]
#b2: deceased per passanger class
barplot(
height = c(
sum(deceased$Pclass==1),
sum(deceased$Pclass==2),
sum(deceased$Pclass==3)
),
names.arg=c(
"1st","2nd","3rd"
),
xlab="Passenger Classes",ylab="Amount of survivors",
main="Deceased Titanic passengers per Passenger Class"
)
#Find all deceased; 549
deceased <- train[train$Survived==0,]
#b2: deceased per passanger class
barplot(
height = c(
sum(deceased$Pclass==1),
sum(deceased$Pclass==2),
sum(deceased$Pclass==3)
),
names.arg=c(
"1st","2nd","3rd"
),
xlab="Passenger Classes",ylab="Amount of deceased",
main="Deceased Titanic passengers per Passenger Class"
)
survivors$Age
hist(survivors$Age)
levels(factor(survivors$Age))
hist(survivors$Age,break=40)
hist(survivors$Age,breaks=40)
hist(survivors$Age,breaks=80)
?hist
hist(
survivors$Age,
breaks=80,
xlab="Ages",ylab="Amount of survivors",
main="Survivors Titanic per Age"
)
hist(
survivors$Age,
breaks=80,
xlab="Ages (year)",ylab="Amount of survivors",
main="Survivors Titanic per Age"
)
?hist
hist(
survivors$Age,
breaks=80,
by=10
xlab="Ages (year)",ylab="Amount of survivors",
main="Survivors Titanic per Age"
)
hist(
survivors$Age,
breaks=80,
by=10,
xlab="Ages (year)",ylab="Amount of survivors",
main="Survivors Titanic per Age"
)
hist(
survivors$Age,
breaks=80,
by=survivors$Age,
xlab="Ages (year)",ylab="Amount of survivors",
main="Survivors Titanic per Age"
)
hist(
survivors$Age,
breaks=80,
by=Age,
xlab="Ages (year)",ylab="Amount of survivors",
main="Survivors Titanic per Age"
)
hist(
survivors$Age,
breaks=80,
by=survivors$Age,
xlab="Ages (year)",ylab="Amount of survivors",
main="Survivors Titanic per Age"
)
hist(
survivors$Age,
breaks=80,
by=survivors$Age,
xlab="Ages (year)",ylab="Amount of survivors",
main="Survivors Titanic per Age"
)
warnings()
mean(train$Age)
mean(train$Age,na.rm = T)
sum(c(4,50,30,1,3,4))
sum(c(4,50,30,1,3,4))
