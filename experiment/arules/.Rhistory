s*2*c
s*2*1
960/16
#Grid
g <- 960
#Space
s <- 10
#Margin
m <- 0
#Columns
c <- 16
#Range
n <- 1:c
g/c
#Grid
g <- 960
#Space
s <- 10
#Margin
m <- 0
#Columns
c <- 16
#Range
n <- 1:c
g/c-s*20
#Grid
g <- 960
#Space
s <- 10
#Margin
m <- 0
#Columns
c <- 16
#Range
n <- 1:c
g/c -s*2
g/c -s*2
(g / c) - (s * 2)
#Grid
g <- 960
#Space
s <- 10
#Margin
m <- 0
#Columns
c <- 16
#Range
n <- 1:c
n * (g / c) - (s * 2)
#Grid
g <- 960
#Space
s <- 10
#Margin
m <- 0
#Columns
c <- 16
#Range
n <- 1:c
n * (g / c) - (s)
#Grid
g <- 960
#Space
s <- 10
#Margin
m <- 0
#Columns
c <- 16
#Range
n <- 1:c
n * (g / c)
#Grid
g <- 960
#Space
s <- 10
#Margin
m <- 0
#Columns
c <- 16
#Range
n <- 1:c
n * (g / c) - (s * 2)
#Grid
g <- 960
#Space
s <- 10
#Margin
m <- 0
#Columns
c <- 16
#Range
n <- 1:c
n * (g / c)
#Grid
g <- 960
#Space
s <- 10
#Margin
m <- 0
#Columns
c <- 16
#Range
n <- 1:c
n * (g / c)
40*15*10
40 * 16
10 * 15
40 * 16 + 10 * 15
40 * 16 + 10 * 16
50 * 16 + 10 * 16
g <- 50 * 16 + 10 * 16 | 960
g
s * c
g - s * c
g - (s * c)
#Grid
g <- 50 * 16 + 10 * 16 #| 960
#Space
s <- 10
#Margin
m <- 0
#Columns
c <- 16
#Range
n <- 1:c
g - (s * c)
g - (s * c)
g - (s * c) / c
(g - (s * c)) / c
50*16
(g - (s * c)) / c
1:50
#Grid
g <- 50 * 16 + 10 * 16 #| 960
#Space
s <- 10
#Margin
m <- 0
#Columns
c <- 16
#Range
n <- 1:c
#Column size
cs <- (g - (s * c)) / c
15*10 + cs * 5
cs <- (g - (s * c)) / c
40*16
40 * 16 + 10 * 16
40 * 16 + 10 * 15
s * 2 * c - 1
(c - 1)
s * 2 * (c - 1)
(g - (s * 2 * (c - 1) )
g - (s * 2 * (c - 1) )
g - (s * 2 * (c - 1) )
(g - (s * 2 * (c - 1) ) / c
(g - (s * 2 * (c - 1) ) / c
g - (s * 2 * (c - 1) ) / c
g - (s * 2 * (c - 1) ) / c
(s * 2 * (c - 1) ) / c
(s * 2) * (c - 1)
(s * 2) * (c - 1)
g - (s * 2) * (c - 1)
g - (s * 2) * (c - 1) / c
(g - (s * 2) * (c - 1)) / c
(g - (s * 2) * (c - 1)) / c - 1
9/16
g/16
(g/n) - (s * 2)
(g/c) - (s * 2)
n * b - s * 2
#Grid
g <- 50 * 16 + 10 * 16 #| 960
#Space
s <- 10
#Margin
m <- 0
#Columns
c <- 16
#Range
n <- 1:c
b <- g / c
n * b - s * 2
#Grid
g <- 50 * 16 + 10 * 16 #| 960
#Space
s <- 10
#Margin
m <- 0
#Columns
c <- 16
#Range
n <- 1:c
b <- g / c
n * b - s * 3
#Grid
g <- 50 * 16 + 10 * 16 #| 960
#Space
s <- 10
#Margin
m <- 0
#Columns
c <- 16
#Range
n <- 1:c
b <- g / c
n * b - s * 2
#Grid
g <- 50 * 16 + 10 * 16 #| 960
#Space
s <- 10
#Margin
m <- 0
#Columns
c <- 16
#Range
n <- 0:c
b <- g / c
n * b - s * 2
#Grid
g <- 50 * 16 + 10 * 16 #| 960
#Space
s <- 10
#Margin
m <- 0
#Columns
c <- 16
#Range
n <- 0:c
b <- g / c
n * b - s * 2 + 20
#Grid
g <- 50 * 16 + 10 * 16 #| 960
#Space
s <- 10
#Margin
m <- 0
#Columns
c <- 16
#Range
n <- 0:c
b <- 50
n * b - s * 2 + 20
#Grid
g <- 50 * 16 + 10 * 16 #| 960
#Space
s <- 10
#Margin
m <- 0
#Columns
c <- 16
#Range
n <- 0:c
b <- 50
n * b - s * 2
f = 960
n = 1
c = 16
g = 10
f = n(c) + n-1(g)
n-1(g)
n*c + n-1*g
f = 960
n = 1:16
c = 16
g = 10
f = n*c + n-1*g
f
install.packages("tm")
library(tm)
?findAssocs
data("crude")
tdm <- TermDocumentMatrix(crude)
findAssocs(tdm, c("oil", "opec", "xyz"), c(0.7, 0.75, 0.1))
crude
tdm
findAssocs(tdm, c("oil", "opec", "xyz"), c(0.7, 0.75, 0.1))
data("crude")
tdm <- TermDocumentMatrix(crude)
findAssocs(tdm, c("oil", "opec", "xyz"), c(0.5)
data("crude")
tdm <- TermDocumentMatrix(crude)
findAssocs(tdm, c("oil", "opec", "xyz"), c(0.5))
data("crude")
tdm <- TermDocumentMatrix(crude)
findAssocs(tdm, c("oil", "opec", "xyz"), c(0.9))
data("crude")
tdm <- TermDocumentMatrix(crude)
findAssocs(tdm, c("oil", "opec", "xyz"), c(0.7))
docs <- c("This is a text.", "This another one.")
vs <- VectorSource(docs)
elem <- getElem(stepNext(vs))
(result <- readPlain(elem, "en", "id1"))
meta(result)
result
ds <- readTabular(data.frame(c("kip")))
ds <- TermDocumentMatrix(ds)
findAssocs(ds, c("oil", "opec", "xyz"), c(0.7))
data.frame(c("kip"))
ds <- readTabular(
data.frame(c("kip"))
)
ds
ds <- readTabular(
data.frame(c("kip"))
)
extractContentDOM("http://jeroensteen.nl/cv", 0.8, asText = TRUE)
install.packages("tm.plugin.webmining")
library(tm.plugin.webmining)
extractContentDOM("http://jeroensteen.nl/cv", 0.8, asText = TRUE)
library(tm)
extractContentDOM("http://jeroensteen.nl/cv", 0.8, asText = TRUE)
install.packages("arules")
library(arules)
library(arules)
rules <- apriori(titanic.raw)
inspect(rules)
library(arules)
rules <- apriori(titanic)
inspect(rules)
titanic
ds <- data.frame(c(
"kaas",
"tomaat"
))
rules <- apriori(ds)
inspect(rules)
inspect(rules)
inspect(rules)
rules
library(arules)
ds <- data.frame(c(
"kaas",
"tomaat"
))
rules <- apriori(ds)
rules = apriori(ds, parameter=list(
support=0.01,
confidence=0.5)
)
inspect(rules)
library(arules)
ds <- data.frame(
c("kaas","tomaat"),
c("kaas", "tomaat", "komkommer"),
c("tomaat")
))
rules <- apriori(ds)
rules = apriori(ds, parameter=list(
support=0.01,
confidence=0.5)
)
inspect(rules)
library(arules)
ds <- data.frame(
c("kaas","tomaat"),
c("kaas", "tomaat", "komkommer"),
c("tomaat")
))
rules <- apriori(ds)
rules = apriori(ds, parameter=list(
support=0.01,
confidence=0.5)
)
inspect(rules)
ds <- data.frame(
c("kaas","tomaat"),
c("kaas", "tomaat", "komkommer"),
c("tomaat")
))
library(arules)
ds <- data.frame(
c("kaas","tomaat"),
c("kaas", "tomaat", "komkommer"),
c("tomaat")
)
rules <- apriori(ds)
rules = apriori(ds, parameter=list(
support=0.01,
confidence=0.5)
)
inspect(rules)
ds <- data.frame(
c("kaas","tomaat"),
c("kaas", "tomaat", "komkommer"),
c("tomaat")
)
ls <- list(
c("kaas","tomaat"),
c("kaas", "tomaat", "komkommer"),
c("tomaat")
)
length(ls)
ls <- list(
c("kaas","tomaat"),
c("kaas", "tomaat", "komkommer"),
c("tomaat")
)
names(ls) <- paste("tr",c(1:ls(length)), sep = "")
names(ls) <- paste("tr", c(1:length(ls)), sep = "")
ls
library(arules)
ls <- list(
c("kaas","tomaat"),
c("kaas", "tomaat", "komkommer"),
c("tomaat")
)
#Set transaction names
names(ls) <- paste("tr", c(1:length(ls)), sep = "")
#Coerce into transactions
trans <- as(a_list, "transactions")
#Analyze transactions
summary(trans)
library(arules)
ls <- list(
c("kaas","tomaat"),
c("kaas", "tomaat", "komkommer"),
c("tomaat")
)
#Set transaction names
names(ls) <- paste("tr", c(1:length(ls)), sep = "")
#Coerce into transactions
trans <- as(a_list, "transactions")
#Analyze transactions
summary(trans)
library(arules)
ls <- list(
c("kaas","tomaat"),
c("kaas", "tomaat", "komkommer"),
c("tomaat")
)
#Set transaction names
names(ls) <- paste("tr", c(1:length(ls)), sep = "")
#Coerce into transactions
trans <- as(ls, "transactions")
#Analyze transactions
summary(trans)
inspect(trans)
library(arules)
ls <- list(
c("kaas","tomaat"),
c("kaas", "tomaat", "komkommer"),
c("tomaat")
)
#Set transaction names
names(ls) <- paste("tr", c(1:length(ls)), sep = "")
#Coerce into transactions
trans <- as(ls, "transactions")
#Analyze transactions
summary(trans)
inspect(trans)
rules <- apriori(ds)
rules = apriori(trans, parameter=list(
support=0.01,
confidence=0.5),
target="rules"
)
inspect(head(sort(rules,by="lift"),n=length(ls)))
#http://www.public.iastate.edu/~vardeman/stat502x/A%20Priori%20Algorithm%20R%20Example.pdf
library(arules)
ls <- list(
c("kaas","tomaat"),
c("kaas", "tomaat", "komkommer"),
c("tomaat")
)
#Set transaction names
names(ls) <- paste("tr", c(1:length(ls)), sep = "")
#Coerce into transactions
trans <- as(ls, "transactions")
#Analyze transactions
summary(trans)
inspect(trans)
rules <- apriori(trans, parameter=list(
support=0.01,
confidence=0.5),
target="rules"
)
inspect(head(sort(rules,by="lift"),n=length(ls)))
rules <- apriori(trans, parameter=list(
support=0.01,
confidence=0.5,
target="rules"),
)
inspect(head(sort(rules,by="lift"),n=length(ls)))
library(arules)
setwd("C:/Users/Wim/Desktop/data_science/experiment/arules")
ls <- list()
#Find the Data file
con  <- file("breien.txt", open = "r")
ls <- list(
c("tomaat","kaas", "ui"),
c("kaas", "ui"),
c("kaas")
)
rules <- apriori(trans, parameter=list(
support=0.01,
confidence=0.01,
target="rules")
)
names(ls) <- paste("tr", c(1:length(ls)), sep = "")
#Coerce into transactions
#trans <- as(ls[!duplicated(ls)], "transactions")
trans <- as(ls, "transactions")
rules <- apriori(trans, parameter=list(
support=0.01,
confidence=0.01,
target="rules")
)
inspect(
sort(rules,by="lift"),
n=length(ls)
)
