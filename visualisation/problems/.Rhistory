s <- 10
#Margin
m <- 0
#Columns
c <- 16
#Range
n <- 1:c
#To 960
n*60
#Space total
g - s*c-1 / c
#Grid
g <- 960
#Space
s <- 10
#Margin
m <- 0
#Columns
c <- 16
#Range
n <- 1:c
#To 960
n*60
#Space total
g - s*c / c
#Grid
g <- 960
#Space
s <- 10
#Margin
m <- 0
#Columns
c <- 16
#Range
n <- 1:c
#To 960
n*60
#Space total
g - s*2*c / c
s*2*c / c
s*2*c
s*2*1
960/16
#Grid
g <- 960
#Space
s <- 10
#Margin
m <- 0
#Columns
c <- 16
#Range
n <- 1:c
g/c
#Grid
g <- 960
#Space
s <- 10
#Margin
m <- 0
#Columns
c <- 16
#Range
n <- 1:c
g/c-s*20
#Grid
g <- 960
#Space
s <- 10
#Margin
m <- 0
#Columns
c <- 16
#Range
n <- 1:c
g/c -s*2
g/c -s*2
(g / c) - (s * 2)
#Grid
g <- 960
#Space
s <- 10
#Margin
m <- 0
#Columns
c <- 16
#Range
n <- 1:c
n * (g / c) - (s * 2)
#Grid
g <- 960
#Space
s <- 10
#Margin
m <- 0
#Columns
c <- 16
#Range
n <- 1:c
n * (g / c) - (s)
#Grid
g <- 960
#Space
s <- 10
#Margin
m <- 0
#Columns
c <- 16
#Range
n <- 1:c
n * (g / c)
#Grid
g <- 960
#Space
s <- 10
#Margin
m <- 0
#Columns
c <- 16
#Range
n <- 1:c
n * (g / c) - (s * 2)
#Grid
g <- 960
#Space
s <- 10
#Margin
m <- 0
#Columns
c <- 16
#Range
n <- 1:c
n * (g / c)
#Grid
g <- 960
#Space
s <- 10
#Margin
m <- 0
#Columns
c <- 16
#Range
n <- 1:c
n * (g / c)
40*15*10
40 * 16
10 * 15
40 * 16 + 10 * 15
40 * 16 + 10 * 16
50 * 16 + 10 * 16
g <- 50 * 16 + 10 * 16 | 960
g
s * c
g - s * c
g - (s * c)
#Grid
g <- 50 * 16 + 10 * 16 #| 960
#Space
s <- 10
#Margin
m <- 0
#Columns
c <- 16
#Range
n <- 1:c
g - (s * c)
g - (s * c)
g - (s * c) / c
(g - (s * c)) / c
50*16
(g - (s * c)) / c
1:50
#Grid
g <- 50 * 16 + 10 * 16 #| 960
#Space
s <- 10
#Margin
m <- 0
#Columns
c <- 16
#Range
n <- 1:c
#Column size
cs <- (g - (s * c)) / c
15*10 + cs * 5
cs <- (g - (s * c)) / c
40*16
40 * 16 + 10 * 16
40 * 16 + 10 * 15
s * 2 * c - 1
(c - 1)
s * 2 * (c - 1)
(g - (s * 2 * (c - 1) )
g - (s * 2 * (c - 1) )
g - (s * 2 * (c - 1) )
(g - (s * 2 * (c - 1) ) / c
(g - (s * 2 * (c - 1) ) / c
g - (s * 2 * (c - 1) ) / c
g - (s * 2 * (c - 1) ) / c
(s * 2 * (c - 1) ) / c
(s * 2) * (c - 1)
(s * 2) * (c - 1)
g - (s * 2) * (c - 1)
g - (s * 2) * (c - 1) / c
(g - (s * 2) * (c - 1)) / c
(g - (s * 2) * (c - 1)) / c - 1
9/16
g/16
(g/n) - (s * 2)
(g/c) - (s * 2)
n * b - s * 2
#Grid
g <- 50 * 16 + 10 * 16 #| 960
#Space
s <- 10
#Margin
m <- 0
#Columns
c <- 16
#Range
n <- 1:c
b <- g / c
n * b - s * 2
#Grid
g <- 50 * 16 + 10 * 16 #| 960
#Space
s <- 10
#Margin
m <- 0
#Columns
c <- 16
#Range
n <- 1:c
b <- g / c
n * b - s * 3
#Grid
g <- 50 * 16 + 10 * 16 #| 960
#Space
s <- 10
#Margin
m <- 0
#Columns
c <- 16
#Range
n <- 1:c
b <- g / c
n * b - s * 2
#Grid
g <- 50 * 16 + 10 * 16 #| 960
#Space
s <- 10
#Margin
m <- 0
#Columns
c <- 16
#Range
n <- 0:c
b <- g / c
n * b - s * 2
#Grid
g <- 50 * 16 + 10 * 16 #| 960
#Space
s <- 10
#Margin
m <- 0
#Columns
c <- 16
#Range
n <- 0:c
b <- g / c
n * b - s * 2 + 20
#Grid
g <- 50 * 16 + 10 * 16 #| 960
#Space
s <- 10
#Margin
m <- 0
#Columns
c <- 16
#Range
n <- 0:c
b <- 50
n * b - s * 2 + 20
#Grid
g <- 50 * 16 + 10 * 16 #| 960
#Space
s <- 10
#Margin
m <- 0
#Columns
c <- 16
#Range
n <- 0:c
b <- 50
n * b - s * 2
f = 960
n = 1
c = 16
g = 10
f = n(c) + n-1(g)
n-1(g)
n*c + n-1*g
f = 960
n = 1:16
c = 16
g = 10
f = n*c + n-1*g
f
ds <- read.csv("ds_ebola_2014.csv")
ds <- as.data.frame(ds)
setwd("C:/Users/Wim/Desktop/data_science/visualisation/problems")
ds <- read.csv("ds_ebola_2014.csv")
ds <- as.data.frame(ds)
ddeaths <- ds[ds$category==" deaths",]
ddeaths$sum <- ddeaths$confirmed + ddeaths$probable + ddeaths$total
ddeaths$sum
library(scales)
ddeaths$date <- as.Date(ddeaths$date)
gg2 <- ggplot2::qplot(ddeaths$date,ddeaths$sum, color=ddeaths$country, main="Total Ebola deaths over time",xlab="Months in 2014",ylab="Amount of deaths (persons confirmed with Ebola)")
gg2 <- gg2 + scale_x_date(label = date_format("%b"),
breaks = seq(min(ddeaths$date), max(ddeaths$date), "month")
)
gg2 <- gg2 + labs(color = "Countries") + geom_line()
gg2
ddeaths$date <- as.Date(ddeaths$date)
gg2 <- ggplot2::qplot(ddeaths$date,ddeaths$sum, color=ddeaths$country, main="Total Ebola deaths over time",xlab="Months in 2014",ylab="Amount of deaths (persons confirmed with Ebola)")
gg2 <- gg2 + scale_x_date(label = date_format("%b"),
breaks = seq(min(ddeaths$date), max(ddeaths$date), "month")
)
gg2 <- gg2 + labs(color = "Countries") + geom_line()
gg2
library(scales)
ddeaths$date <- as.Date(ddeaths$date)
gg2 <- ggplot2::qplot(ddeaths$date,ddeaths$sum, color=ddeaths$country, main="Total Ebola deaths over time",xlab="Months in 2014",ylab="Amount of deaths (persons confirmed with Ebola)")
gg2 <- gg2 + scale_x_date(label = date_format("%b"),
breaks = seq(min(ddeaths$date), max(ddeaths$date), "month")
)
gg2 <- gg2 + labs(color = "Countries") + geom_line()
gg2
gg2 + labs(color = "Countries") + geom_line()
library(ggplot2)
ddeaths$date <- as.Date(ddeaths$date)
gg2 <- ggplot2::qplot(ddeaths$date,ddeaths$sum, color=ddeaths$country, main="Total Ebola deaths over time",xlab="Months in 2014",ylab="Amount of deaths (persons confirmed with Ebola)")
gg2 <- gg2 + scale_x_date(label = date_format("%b"),
breaks = seq(min(ddeaths$date), max(ddeaths$date), "month")
)
gg2 <- gg2 + labs(color = "Countries") + geom_line()
gg2
ddeaths
aggregate(ddeaths$sum, by=list(ddeaths$date), sum)
ddeaths <- aggregate(ddeaths$sum, by=list(ddeaths$date), sum)
ddeaths <- names("date", "deaths")
ddeaths <- names(c("date", "deaths"))
ddeaths <- aggregate(ddeaths$sum, by=list(ddeaths$date), sum)
ddeaths <- names(c("date", "sum"))
ddeaths <- ds[ds$category==" deaths",]
ddeaths <- aggregate(ddeaths$sum, by=list(ddeaths$date), sum)
ddeaths <- names(c("date", "sum"))
ds <- read.csv("ds_ebola_2014.csv")
ds <- as.data.frame(ds)
ddeaths <- ds[ds$category==" deaths",]
ddeaths$sum <- ddeaths$confirmed + ddeaths$probable + ddeaths$total
ddeaths$date <- as.Date(ddeaths$date)
ddeaths <- aggregate(ddeaths$sum, by=list(ddeaths$date), sum)
ddeaths <- names(c("date", "sum"))
gg2 <- ggplot2::qplot(ddeaths$date,ddeaths$sum, main="Total Ebola deaths over time",xlab="Months in 2014",ylab="Amount of deaths (persons confirmed with Ebola)")
gg2 <- gg2 + scale_x_date(label = date_format("%b"),
breaks = seq(min(ddeaths$date), max(ddeaths$date), "month")
)
gg2 <- gg2 + labs(color = "Countries") + geom_line()
gg2
gg2 <- ggplot2::qplot(ddeaths$date,ddeaths$sum, main="Total Ebola deaths over time",xlab="Months in 2014",ylab="Amount of deaths (persons confirmed with Ebola)")
gg2 <- gg2 + scale_x_date(label = date_format("%b"),
breaks = seq(min(ddeaths$date), max(ddeaths$date), "month")
)
gg2
gg2 <- ggplot2::qplot(ddeaths$date,ddeaths$sum, main="Total Ebola deaths over time",xlab="Months in 2014",ylab="Amount of deaths (persons confirmed with Ebola)")
gg2
ddeaths$date
ddeaths
ddeaths <- ds[ds$category==" deaths",]
ddeaths$date <- as.Date(ddeaths$date)
ddeaths$sum <- ddeaths$confirmed + ddeaths$probable + ddeaths$total
ddeaths
ddeaths <- names(c("date", "sum"))
ddeaths
ddeaths <- ds[ds$category==" deaths",]
ddeaths$sum <- ddeaths$confirmed + ddeaths$probable + ddeaths$total
ddeaths$date <- as.Date(ddeaths$date)
ddeaths <- aggregate(ddeaths$sum, by=list(ddeaths$date), sum)
ddeaths
names(ddeaths) <- (c("date", "sum"))
ddeaths
gg2 <- ggplot2::qplot(ddeaths$date,ddeaths$sum, main="Total Ebola deaths over time",xlab="Months in 2014",ylab="Amount of deaths (persons confirmed with Ebola)")
gg2 <- gg2 + scale_x_date(label = date_format("%b"),
breaks = seq(min(ddeaths$date), max(ddeaths$date), "month")
)
gg2 <- gg2 + labs(color = "Countries") + geom_line()
gg2
dcases <- ds[ds$category==" cases",]
dcases <- ds[ds$category==" cases",]
dcountries <- split(dcases, dcases$country, drop=T)
for (i in 1:length(dcountries)) {
dcountry <- dcountries[[i]]
print( as.character(dcountry[["country"]]) )
dcountrymin <- min(as.Date(dcountry$date))
print( dcountrymin )
}
aggregate(ddeaths$date, by=list(ddeaths$country), min)
ddeaths$date
ddeaths$country
dcases <- ds[ds$category==" cases",]
aggregate(dcases$date, by=list(dcases$country), min)
dcases <- ds[ds$category==" cases",]
ddeaths$date <- as.Date(ddeaths$date)
aggregate(dcases$date, by=list(dcases$country), min)
aggregate(dcases$date, by=list(factor(dcases$country)), min)
aggregate(dcases$date, by=dcases$country, min)
aggregate(dcases$date, by=list(dcases$country), min)
aggregate(dcases$date, by=list(as.character(dcases$country)), min)
#3: New infections occur; date
dcases <- ds[ds$category==" cases",]
#dcountries <- split(dcases, dcases$country, drop=T)
#for (i in 1:length(dcountries)) {
#  dcountry <- dcountries[[i]]
#
#  print( as.character(dcountry[["country"]]) )
#  dcountrymin <- min(as.Date(dcountry$date))
#
#  print( dcountrymin )
#}
dcases$date <- as.Date(dcases$date)
aggregate(dcases$date, by=list(as.character(dcases$country)), min)
dcases$date <- as.Date(dcases$date)
dcases <- aggregate(dcases$date, by=list(as.character(dcases$country)), min)
names(dcases) <- (c("country", "date"))
dcases <- ds[ds$category==" cases",]
#dcountries <- split(dcases, dcases$country, drop=T)
#for (i in 1:length(dcountries)) {
#  dcountry <- dcountries[[i]]
#
#  print( as.character(dcountry[["country"]]) )
#  dcountrymin <- min(as.Date(dcountry$date))
#
#  print( dcountrymin )
#}
dcases$date <- as.Date(dcases$date)
dcases <- aggregate(dcases$date, by=list(as.character(dcases$country)), min)
names(dcases) <- (c("country", "date"))
hist(dcases)
dcases
hist(dcases$date, dcases$country)
hist(dcases$date, dcases$country, breaks=1)
hist(dcases$date, dcases$country, breaks=0)
dcases <- ds[ds$category==" cases",]
#dcountries <- split(dcases, dcases$country, drop=T)
#for (i in 1:length(dcountries)) {
#  dcountry <- dcountries[[i]]
#
#  print( as.character(dcountry[["country"]]) )
#  dcountrymin <- min(as.Date(dcountry$date))
#
#  print( dcountrymin )
#}
dcases$date <- as.Date(dcases$date)
dcases <- aggregate(dcases$date, by=list(as.character(dcases$country)), min)
names(dcases) <- (c("country", "date"))
dcases
?hist
?hist.Date
hist(dcases$date, dcases$country, freq=T)
hist(dcases$date, "dates", freq=T)
hist(dcases$date, "dates", freq=T)
dcases$date
hist(dcases$date, "dates", breaks=9)
dcases
hist(dcases$date, dcases$country, breaks=9)
hist(dcases$date, dcases$country, breaks=9)
hist(dcases$date, dcases$country, breaks=9)
plot(dcases$date, dcases$country)
plot(dcases$date)
barplot(dcases)
barplot(dcases$date)
barplot(dcases$date, dcases$country)
hist(dcases$date, dcases$country)
hist(dcases$date, dcases$country, breaks=9)
dcases$date, dcases$country
dcases$date <- as.Date(dcases$date)
dcases <- aggregate(dcases$date, by=list(as.character(dcases$country)), min)
names(dcases) <- (c("country", "date"))
hist(dcases$date, dcases$country, breaks=9)
#3: New infections occur; date
dcases <- ds[ds$category==" cases",]
#dcountries <- split(dcases, dcases$country, drop=T)
#for (i in 1:length(dcountries)) {
#  dcountry <- dcountries[[i]]
#
#  print( as.character(dcountry[["country"]]) )
#  dcountrymin <- min(as.Date(dcountry$date))
#
#  print( dcountrymin )
#}
dcases$date <- as.Date(dcases$date)
dcases <- aggregate(dcases$date, by=list(as.character(dcases$country)), min)
names(dcases) <- (c("country", "date"))
hist(dcases$date, dcases$country, breaks=9,xlab="Months",ylab="Occurrences (less is better)", main="New first occurrences of invected Ebola countries")
View(ds)
View(ds)
100/6
100/16
100/1:16
-1 * 10 / 2
