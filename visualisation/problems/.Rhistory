hist(irises[Species=="setosa",]$Petal.Width, main="Irises",xlab="X",ylab="Y",breaks=20)
attach(irises)
hist(irises[Species=="setosa",]$Petal.Width, main="Irises",xlab="X",ylab="Y",breaks=20)
hist(t(irises[Species=="setosa",]$Petal.Width), main="Irises",xlab="X",ylab="Y",breaks=20)
hist(t(irises[Species=="setosa",]$Petal.Width), main="Irises",xlab="X",ylab="Y",breaks=20)
hist(irises[Species=="setosa",]$Petal.Width)
hist(irises[Species=="setosa",]$Petal.Width, main="Irises",xlab="X",ylab="Y",breaks=20)
irises[Species=="setosa",]$Petal.Width
hist(as.table(irises[Species=="setosa",]$Petal.Width))
hist(irises[Species=="setosa",]$Petal.Width, main="Irises",xlab="Petal width",ylab="Frequency",breaks=20,axes = c("x","y"))
hist(irises[Species=="setosa",]$Petal.Width, main="Irises",xlab="Petal width",ylab="Frequency",breaks=20,axes = 50)
irises[Species=="setosa",]$Petal.Width
str(irises[Species=="setosa",]$Petal.Width)
hist(irises[Species=="setosa",]$Petal.Width, main="Irises",xlab="Petal width",ylab="Frequency",breaks=seq(0, 1, by=0.1))
hist(irises[Species=="setosa",]$Petal.Width, main="Irises",xlab="Petal width",ylab="Frequency",breaks=seq(0, 5, by=0.05))
hist(irises[Species=="setosa",]$Petal.Width, main="Irises",xlab="Petal width",ylab="Frequency",breaks=seq(0, 0.5, by=0.005))
hist(irises[Species=="setosa",]$Petal.Width, main="Irises",xlab="Petal width",ylab="Frequency",breaks=seq(0, 0.5, by=0.01))
hist(irises[Species=="setosa",]$Petal.Width, main="Irises",xlab="Petal width",ylab="Frequency",breaks=seq(0, 0.5, by=0.1))
seq(0, 0.5, by=0.1)
hist(irises[Species=="setosa",]$Petal.Width, main="Irises",xlab="Petal width",ylab="Frequency",breaks=seq(0.1, 0.5, by=0.1))
hist(irises[Species=="setosa",]$Petal.Width, main="Irises",xlab="Petal width",ylab="Frequency",breaks=1)
hist(irises[Species=="setosa",]$Petal.Width, main="Irises",xlab="Petal width",ylab="Frequency",breaks=2)
hist(irises[Species=="setosa",]$Petal.Width, main="Irises",xlab="Petal width",ylab="Frequency",breaks=5)
hist(irises[Species=="setosa",]$Petal.Width, main="Irises",xlab="Petal width",ylab="Frequency",breaks=8)
hist(irises[Species=="setosa",]$Petal.Width, main="Irises",xlab="Petal width",ylab="Frequency",breaks=21)
hist(irises[Species=="setosa",]$Petal.Width, main="Irises",xlab="Petal width",ylab="Frequency",breaks=20)
typeof(irises[Species=="setosa",]$Petal.Width)
irises[Species=="setosa",]$Petal.Width
install.packages("swirl")
library("swirl")
ls(0)
ls()
swirl()
5+7
x<-5+7
x
y<-x-3
y
z<-c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z-my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4)
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
z*2+1000
my_div
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0,10,by=0.5)
seq(5,10,length=30)
my_seq <- seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0,times=40)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each=10)
num_vect <-c(0.5,55,-10,6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My","name","is")
my_char
paste(my_char, collapse=" ")
c(my_char, "Jeroen")
my_name <- c(my_char, "Jeroen")
my_name
paste(my_name, collapse=" ")
paste("Hello","world!",sep=" ")
paste(c("X","Y","Z"),sep="")
paste(1:3,c("X","Y","Z"),sep="")
paste(LETTERS, 1:4,c("X","Y","Z"),sep="-")
paste(LETTERS, 1:4,sep="-")
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
setwd("C:/Users/Wim/Desktop/data_science/visualisation/problems")
ds <- read.csv("ds_ebola_2014.csv")
ds <- as.data.frame(ds)
dcases = ds[ds$category==" cases",]
ggplot2::qplot(dcases$date, dcases$confirmed, color=dcases$country, main="Country",xlab="country",ylab="cases")
dcases
dcases[dcases$country=="Guinea",]
dcases[dcases$country=="Guinea",30]
dguinea <- dcases[dcases$country=="Guinea",0:30]
dguinea <- dcases[dcases$country=="Guinea",]
dcases[dcases$country=="Guinea",1:10]
dguinea <- dcases[dcases$country=="Guinea",]
dguinea[1:10,]
dguinea$days <- 1:10
dguinea <- dguinea[1:10,]
dguinea$days <- 1:10
ddguinea
dguinea
dguinea <- dcases[dcases$country=="Guinea",]
dguinea <- dguinea[1:10,]
dguinea$days <- 1:10
dliberia <- dcases[dcases$country=="Liberia",]
dliberia <- dliberia[1:10,]
dliberia$days <- 1:10
dmali <- dcases[dcases$country=="Mali",]
dmali <- dmali[1:10,]
dmali$days <- 1:10
dnigeria <- dcases[dcases$country=="Nigeria",]
dnigeria <- dnigeria[1:10,]
dnigeria$days <- 1:10
dsenegal <- dcases[dcases$country=="Senegal",]
dsenegal <- dsenegal[1:10,]
dsenegal$days <- 1:10
dsierra <- dcases[dcases$country=="Sierra Leone",]
dsierra <- dsierra[1:10,]
dsierra$days <- 1:10
dspain <- dcases[dcases$country=="Spain",]
dspain <- dspain[1:10,]
dspain$days <- 1:10
duk <- dcases[dcases$country=="UK",]
duk <- duk[1:10,]
duk$days <- 1:10
dusa <- dcases[dcases$country=="USA",]
dusa <- dusa[1:10,]
dusa$days <- 1:10
dsierra
Reduce(function(x, y) merge(x, y, all=TRUE), list(dguinea,dliberia,dmali,dnigeria,dsenegal,dsierra,dspain,duk,dusa))
Reduce(function(x, y) merge(x, y, all=TRUE), list(dguinea,dliberia,dmali,dnigeria,dsenegal,dsierra,dspain,duk,dusa))
dusa
drcases <- Reduce(function(x, y) merge(x, y, all=TRUE), list(dguinea,dliberia,dmali,dnigeria,dsenegal,dsierra,dspain,duk,dusa))
drcases <- drcases[!is.na(drcases)]
drcases
drcases <- Reduce(function(x, y) merge(x, y, all=TRUE), list(dguinea,dliberia,dmali,dnigeria,dsenegal,dsierra,dspain,duk,dusa))
ggplot2::qplot(drcases$date, drcases$confirmed, color=drcases$country, main="Country",xlab="country",ylab="cases per day", na.rm = TRUE)
ggplot2::qplot(drcases$day, drcases$confirmed, color=drcases$country, main="Country",xlab="country",ylab="cases per day", na.rm = TRUE)
ggplot2::qplot(drcases$day, drcases$confirmed, color=drcases$country, main="Country",xlab="country",ylab="cases per day", na.rm = TRUE)
ggplot2::qplot(drcases$day, drcases$confirmed, color=drcases$country, main="Rise of Ebola",xlab="Days",ylab="Amount of cases (person confirmed with Ebola)", na.rm = TRUE)
+scale_color_manual("Legend Title\n",labels = c("T999", "T888"), values = c("blue", "red"))
?ggplot2
?ggplot2::gplot
??gplot
ggplot2::qplot(drcases$day, drcases$confirmed, color=drcases$country, main="Rise of Ebola",xlab="Days",ylab="Amount of cases (persons confirmed with Ebola)", na.rm = TRUE)
+theme(legend.title = element_text(colour="chocolate", size=16, face="bold"))+
scale_color_discrete(name="This color is\ncalled chocolate!?")
ggplot2::qplot(drcases$day, drcases$confirmed, color=drcases$country, main="Rise of Ebola",xlab="Days",ylab="Amount of cases (persons confirmed with Ebola)", na.rm = TRUE)
+ labs(list(title = "Title"))
gg <- ggplot2::qplot(drcases$day, drcases$confirmed, color=drcases$country, main="Rise of Ebola",xlab="Days",ylab="Amount of cases (persons confirmed with Ebola)", na.rm = TRUE)
gg + labs(list(title = "Title"))
gg <- ggplot2::qplot(drcases$day, drcases$confirmed, color=drcases$country, main="Rise of Ebola",xlab="Days",ylab="Amount of cases (persons confirmed with Ebola)", na.rm = TRUE)
gg + scale_fill_continuous(guide = guide_legend(title = "V"))
ggplot2::qplot(drcases$day, drcases$confirmed, color=drcases$country, main="Rise of Ebola",xlab="Days",ylab="Amount of cases (persons confirmed with Ebola)", na.rm = TRUE)
+ guide_legend("title")
ggplot2::qplot(drcases$day, drcases$confirmed, color=drcases$country, main="Rise of Ebola",xlab="Days",ylab="Amount of cases (persons confirmed with Ebola)", na.rm = TRUE,guide_legend="Test")
ggplot2::qplot(drcases$day, drcases$confirmed, color=drcases$country, main="Rise of Ebola",xlab="Days",ylab="Amount of cases (persons confirmed with Ebola)", na.rm = TRUE)
+theme(legend.title=element_blank())
library(ggplot2)
ggplot2::qplot(drcases$day, drcases$confirmed, color=drcases$country, main="Rise of Ebola",xlab="Days",ylab="Amount of cases (persons confirmed with Ebola)", na.rm = TRUE)
+ theme(legend.title=element_blank())
ggplot2::qplot(drcases$day, drcases$confirmed, color=drcases$country, main="Rise of Ebola",xlab="Days",ylab="Amount of cases (persons confirmed with Ebola)", na.rm = TRUE)
+ theme(legend.title=element_blank())
ggplot2::qplot(drcases$day, drcases$confirmed, color=drcases$country, main="Rise of Ebola",xlab="Days",ylab="Amount of cases (persons confirmed with Ebola)", na.rm = TRUE)
+ theme(legend.title="Test")
ggplot2::qplot(drcases$day, drcases$confirmed, color=drcases$country, main="Rise of Ebola",xlab="Days",ylab="Amount of cases (persons confirmed with Ebola)", na.rm = TRUE)
+ guides(fill=guide_legend(title="Test"))
ggplot2::qplot(drcases$day, drcases$confirmed, color=drcases$country, main="Rise of Ebola",xlab="Days",ylab="Amount of cases (persons confirmed with Ebola)", na.rm = TRUE)
+ guides(fill=guide_legend(title=NULL))
ggplot2::qplot(drcases$day, drcases$confirmed, color=drcases$country, main="Rise of Ebola",xlab="Days",ylab="Amount of cases (persons confirmed with Ebola)", na.rm = TRUE)
+ scale_fill_discrete(name = "New Legend Title")
gg <- ggplot2::qplot(drcases$day, drcases$confirmed, color=drcases$country, main="Rise of Ebola",xlab="Days",ylab="Amount of cases (persons confirmed with Ebola)", na.rm = TRUE)
gg + scale_fill_discrete(name = "New Legend Title")
gg
gg <- ggplot2::qplot(drcases$day, drcases$confirmed, color=drcases$country, main="Rise of Ebola",xlab="Days",ylab="Amount of cases (persons confirmed with Ebola)", na.rm = TRUE)
gg + guide_legend(title="my awesome title")
gg
gg <- ggplot2::qplot(drcases$day, drcases$confirmed, color=drcases$country, main="Rise of Ebola",xlab="Days",ylab="Amount of cases (persons confirmed with Ebola)", na.rm = TRUE)
gg + labs(fill = "Dose (mg)")
gg
gg <- ggplot2::qplot(drcases$day, drcases$confirmed, color=drcases$country, main="Rise of Ebola",xlab="Days",ylab="Amount of cases (persons confirmed with Ebola)", na.rm = TRUE)
gg + labs(legend = "Dose (mg)")
gg
gg <- ggplot2::qplot(drcases$day, drcases$confirmed, color=drcases$country, main="Rise of Ebola",xlab="Days",ylab="Amount of cases (persons confirmed with Ebola)", na.rm = TRUE)
gg + labs(color = = "Dose (mg)")
gg <- ggplot2::qplot(drcases$day, drcases$confirmed, color=drcases$country, main="Rise of Ebola",xlab="Days",ylab="Amount of cases (persons confirmed with Ebola)", na.rm = TRUE)
gg + labs(color = "Dose (mg)")
gg <- ggplot2::qplot(drcases$day, drcases$confirmed, color=drcases$country, main="Rise of Ebola",xlab="Days",ylab="Amount of cases (persons confirmed with Ebola)", na.rm = TRUE)
gg + labs(color = "Countries")
ggplot2::qplot(drcases$day, drcases$confirmed, color=drcases$country, main="Rise of Ebola",xlab="Days",ylab="Amount of cases (persons confirmed with Ebola)", na.rm = TRUE)
+ labs(color = "Countries")
gg <- ggplot2::qplot(drcases$day, drcases$confirmed, color=drcases$country, main="Rise of Ebola",xlab="Days",ylab="Amount of cases (persons confirmed with Ebola)", na.rm = TRUE)
gg + labs(color = "Countries")
gg + geom_line()
gg
gg <- ggplot2::qplot(drcases$day, drcases$confirmed, color=drcases$country, main="Rise of Ebola",xlab="Days",ylab="Amount of cases (persons confirmed with Ebola)", na.rm = TRUE)
gg + labs(color = "Countries")
gg + geom_line()
gg <- ggplot2::qplot(drcases$day, drcases$confirmed, color=drcases$country, main="Rise of Ebola",xlab="Days",ylab="Amount of cases (persons confirmed with Ebola)", na.rm = TRUE)
gg <- gg + labs(color = "Countries") + geom_line()
gg
ddeaths = ds[ds$category==" deaths",]
dsum <- aggregate(ddeaths$confirmed, by=list(ddeaths$country), FUN=sum)
ggplot2::qplot(dsum$Group.1,dsum$x)
drcases$country
gg <- ggplot2::qplot(drcases$day, drcases$confirmed, color=drcases$country, main="Rise of Ebola",xlab="Days",ylab="Amount of cases (persons confirmed with Ebola)", na.rm = TRUE)
gg <- gg + labs(color = "Countries") + geom_line()
gg
ddeaths = ds[ds$category==" deaths",]
dsum <- aggregate(ddeaths$confirmed, by=list(ddeaths$country), FUN=sum)
dsum
ddeaths
ddeaths <- ds[ds$category==" deaths",]
ddeaths$sum <- ddeaths$confirmed + ddeaths$probable + ddeaths$total
ddeaths
ddeaths$sum <- ddeaths$confirmed + ddeaths$probable + ddeaths$total
ggplot2::qplot(ddeaths$sum)
ggplot2::qplot(ddeaths$sum,ddeaths$date)
ggplot2::qplot(ddeaths$date,ddeaths$sum)
dsum <- aggregate(ddeaths$sum, by=list(ddeaths$country), FUN=sum)
dsum
dsum <- aggregate(ddeaths$country, by=list(ddeaths$sum), FUN=sum)
dsum <- aggregate(ddeaths$sum, by=list(ddeaths$country), FUN=sum)
dsum
dsum <- aggregate(ddeaths$date,data=ddeaths,sum)
dsum <- aggregate(ddeaths$date,data=ddeaths,FUN=sum)
dsum <- aggregate(ddeaths$date,data=ddeaths,by=list(ddeaths$country),FUN=sum)
dsum <- aggregate(ddeaths$country,data=ddeaths,by=list(ddeaths$date),FUN=sum)
ddeaths$date
dsum <- aggregate(ddeaths,by=list(ddeaths$date),FUN=sum)
dsum <- aggregate(ddeaths,by=list(ddeaths$country),FUN=sum)
dsum <- aggregate(ddeaths$date,by=list(ddeaths$country),FUN=sum)
str(ddeaths)
ggplot2::qplot(ddeaths$date,ddeaths$sum)
ddeaths
ggplot2::qplot(ddeaths$date,ddeaths$sum, color=ddeaths$country)
ggplot2::qplot(ddeaths$date,ddeaths$sum, color=ddeaths$country,breaks=10)
ggplot2::qplot(ddeaths$date,ddeaths$sum, color=ddeaths$country,breaks=5)
gg2 <- ggplot2::qplot(ddeaths$date,ddeaths$sum, color=ddeaths$country)
gg2 <- gg2 + scale_x_date(format="%m/%d", ' ')
gg2
gg2 <- gg2 + scale_x_date(format="%d", ' ')
seq(min(ddeaths$date), max(ddeaths$date)
seq(min(ddeaths$date), max(ddeaths$date), "month")
seq(min(ddeaths$date), max(ddeaths$date), "month")
seq(min(as.Date(ddeaths$date)), max(as.Date(ddeaths$date)), "month")
gg2 <- ggplot2::qplot(ddeaths$date,ddeaths$sum, color=ddeaths$country)
gg2 <- scale_x_date(label = date_format("%b"), breaks = seq(min(as.Date(ddeaths$date)), max(as.Date(ddeaths$date)), "month"))
library(ggplot2)
gg2 <- ggplot2::qplot(ddeaths$date,ddeaths$sum, color=ddeaths$country)
gg2 <- scale_x_date(label = date_format("%b"), breaks = seq(min(as.Date(ddeaths$date)), max(as.Date(ddeaths$date)), "month"))
library(scales)
gg2 <- ggplot2::qplot(ddeaths$date,ddeaths$sum, color=ddeaths$country)
gg2 <- scale_x_date(label = date_format("%b"),
breaks = seq(min(as.Date(ddeaths$date)), max(as.Date(ddeaths$date)), "month")
)
gg2
gg2 <- scale_x_date(label = date_format("%b"),
breaks = seq(min(as.Date(ddeaths$date)), max(as.Date(ddeaths$date)), "month")
)
scale_x_date(label = date_format("%b"),
breaks = seq(min(as.Date(ddeaths$date)), max(as.Date(ddeaths$date)), "month")
)
gg2 <- ggplot2::qplot(ddeaths$date,ddeaths$sum, color=ddeaths$country)
gg2 <- gg2 + scale_x_date(label = date_format("%b"),
breaks = seq(min(as.Date(ddeaths$date)), max(as.Date(ddeaths$date)), "month")
)
gg2
ddeaths$date <- strptime(ddeaths$date, '%m/%d/%y')
gg2 <- ggplot2::qplot(ddeaths$date,ddeaths$sum, color=ddeaths$country)
gg2 <- gg2 + scale_x_date(label = date_format("%b"),
breaks = seq(min(as.Date(ddeaths$date)), max(as.Date(ddeaths$date)), "month")
)
ddeaths <- ds[ds$category==" deaths",]
ddeaths$sum <- ddeaths$confirmed + ddeaths$probable + ddeaths$total
gg2 <- ggplot2::qplot(ddeaths$date,ddeaths$sum, color=ddeaths$country)
gg2 <- gg2 + scale_x_date(label = date_format("%b"),
breaks = seq(min(as.Date(ddeaths$date)), max(as.Date(ddeaths$date)), "month")
)
gg2
ddeaths$date <- as.Date(ddeaths$date)
gg2 <- ggplot2::qplot(ddeaths$date,ddeaths$sum, color=ddeaths$country)
gg2 <- gg2 + scale_x_date(label = date_format("%b"),
breaks = seq(min(ddeaths$date), max(ddeaths$date), "month")
)
gg2
gg2 <- gg2 + labs(color = "Countries") + geom_line()
gg2
View(ddeaths)
View(ddeaths)
gg2 <- ggplot2::qplot(ddeaths$date,ddeaths$sum, color=ddeaths$country, main="Total Ebola deaths over time",xlab="Months in 2014",ylab="Amount of deaths (persons confirmed with Ebola)")
gg2 <- gg2 + scale_x_date(label = date_format("%b"),
breaks = seq(min(ddeaths$date), max(ddeaths$date), "month")
)
gg2 <- gg2 + labs(color = "Countries") + geom_line()
gg2
boxplot(ds$probable ~ ds$country)
dguinea
View(dcases)
gg2
dsum <- aggregate(ddeaths$date, by=list(ddeaths$country), FUN=sum)
ddeaths <- ds[ds$category==" deaths",]
dsum <- aggregate(ddeaths$date, by=list(ddeaths$country), FUN=sum)
dsum <- aggregate(ddeaths$confirmed, by=list(ddeaths$country), FUN=sum)
ggplot2::qplot(dsum$Group.1,dsum$x)
dsum
gg4 <- ggplot2::qplot(dcases$date,dcases$sum, color=dcases$country, main="Total Ebola confirmed over time",xlab="Months in 2014",ylab="Amount of confirmed cases)")
gg4 <- gg4 + scale_x_date(label = date_format("%b"),
breaks = seq(min(ddeaths$date), max(ddeaths$date), "month")
)
gg4 <- gg4 + labs(color = "Countries") + geom_line()
gg4
dcases$date <- as.Date(dcases$date)
gg4 <- ggplot2::qplot(dcases$date,dcases$sum, color=dcases$country, main="Total Ebola confirmed over time",xlab="Months in 2014",ylab="Amount of confirmed cases)")
gg4 <- gg4 + scale_x_date(label = date_format("%b"),
breaks = seq(min(dcases$date), max(dcases$date), "month")
)
gg4 <- gg4 + labs(color = "Countries") + geom_line()
gg4
dcases$date <- as.Date(dcases$date)
gg4 <- ggplot2::qplot(dcases$date,dcases$sum, color=dcases$country, main="Total Ebola confirmed over time",xlab="Months in 2014",ylab="Amount of confirmed cases)")
gg4 <- gg4 + scale_x_date(label = date_format("%b"),
breaks = seq(min(dcases$date), max(dcases$date), "month")
)
gg4 <- gg4 + labs(color = "Countries") + geom_line()
gg4
gg4 <- ggplot2::qplot(dcases$date,dcases$sum, color=dcases$country, main="Total Ebola confirmed over time",xlab="Months in 2014",ylab="Amount of confirmed cases)")
gg4 <- gg4 + scale_x_date(label = date_format("%b"),
breaks = seq(min(dcases$date), max(dcases$date), "month")
)
gg4 <- gg4 + labs(color = "Countries") + geom_line()
gg4
dcases
ds <- read.csv("ds_ebola_2014.csv")
ds <- as.data.frame(ds)
dcases = ds[ds$category==" cases",]
library(scales)
dcases$date <- as.Date(dcases$date)
gg4 <- ggplot2::qplot(dcases$date,dcases$sum, color=dcases$country, main="Total Ebola confirmed over time",xlab="Months in 2014",ylab="Amount of confirmed cases)")
gg4 <- gg4 + scale_x_date(label = date_format("%b"),
breaks = seq(min(dcases$date), max(dcases$date), "month")
)
gg4 <- gg4 + labs(color = "Countries") + geom_line()
gg4
gg4 <- ggplot2::qplot(dcases$date,dcases$confirmed, color=dcases$country, main="Total Ebola confirmed over time",xlab="Months in 2014",ylab="Amount of confirmed cases)")
gg4 <- gg4 + scale_x_date(label = date_format("%b"),
breaks = seq(min(dcases$date), max(dcases$date), "month")
)
gg4 <- gg4 + labs(color = "Countries") + geom_line()
gg4
gg4 <- ggplot2::qplot(dcases$date,dcases$confirmed, color=dcases$country, main="Total Ebola confirmed over time",xlab="Months in 2014",ylab="Amount of confirmed cases")
gg4 <- gg4 + scale_x_date(label = date_format("%b"),
breaks = seq(min(dcases$date), max(dcases$date), "month")
)
gg4 <- gg4 + labs(color = "Countries") + geom_line()
gg4
gg4 <- ggplot2::qplot(dcases$date,dcases$confirmed, color=dcases$country, main="Total persons confirmed with Ebola over time",xlab="Months in 2014",ylab="Amount of confirmed cases")
gg4 <- gg4 + scale_x_date(label = date_format("%b"),
breaks = seq(min(dcases$date), max(dcases$date), "month")
)
gg4 <- gg4 + labs(color = "Countries") + geom_line()
gg4
View(ds)
ds$country
dcases <- ds[ds$category==" cases",]
dcases[dcases$country %in% selected,]
dcases[dcases$country %in% Sengegal,]
dcases[dcases$country %in% dcases$country,]
split(dcases, dcases$country, drop=TRUE)
dcases <- ds[ds$category==" cases",]
dcountries <- split(dcases, dcases$country, drop=TRUE)
for (i in 1:length(dcountries)) {
print(i)
}
for (i in 1:length(dcountries)) {
print(dcountries[i])
}
for (i in 1:length(dcountries)) {
print(dcountries[i]$date)
}
for (i in 1:length(dcountries)) {
print(dcountries[i])
}
for (i in 1:length(dcountries)) {
print(dcountries[[i]]$date)
}
for (i in 1:length(dcountries)) {
print(dcountries[[i]]$date[[1]])
}
for (i in 1:length(dcountries)) {
print(dcountries[[i]]$date)
}
for (i in 1:length(dcountries)) {
print(dcountries[[i]]$date)
}
for (i in 1:length(dcountries)) {
print(dcountries[[i]])
}
countries[dcountries[[i]],]
dcountries[dcountries[[i]],]
dcountries[[i]],1
for (i in 1:length(dcountries)) {
dcountry <- dcountries[[i]]
dcountry <- dcountry[dcountry$date,1]
print( dcountry )
}
dcountries[[i]]
dcountry[dcountry$date,1]
for (i in 1:length(dcountries)) {
dcountry <- dcountries[[i]]
dcountry <- dcountry[dcountry$date,1]
print( dcountry )
}
for (i in 1:length(dcountries)) {
dcountry <- dcountries[[i]]
dcountry <- dcountry[dcountry$date]
print( dcountry )
}
for (i in 1:length(dcountries)) {
dcountry <- dcountries[[i]]
dcountry <- dcountry[dcountry$date,]
print( dcountry )
}
for (i in 1:length(dcountries)) {
dcountry <- dcountries[[i]]
dcountry <- dcountry[dcountry$date,1]
print( dcountry )
}
for (i in 1:length(dcountries)) {
dcountry <- dcountries[[i]]
dcountry <- dcountry[dcountry$country,1]
print( dcountry )
}
for (i in 1:length(dcountries)) {
dcountry <- dcountries[[i]]
dcountry <- dcountry[dcountry$date,1]
print( dcountry )
}
for (i in 1:length(dcountries)) {
dcountry <- dcountries[[i]]
dcountry <- dcountry[dcountry$date,c(1)]
print( dcountry )
}
for (i in 1:length(dcountries)) {
dcountry <- dcountries[[i]]
dcountry <- dcountry[,c(1)]
print( dcountry )
}
dcountries <- split(dcases, dcases$country, drop=TRUE)
str(dcountries)
dcountries <- split(dcases, dcases$country, drop=TRUE)
dcountries
dcountries <- split(dcases, dcases$country, drop=F)
dcountries
for (i in 1:length(dcountries)) {
dcountry <- dcountries[[i]]
dcountrymin <- (as.Date(dcountry$date)
print( dcountrymin )
}
for (i in 1:length(dcountries)) {
dcountry <- dcountries[[i]]
dcountrymin <- (as.Date(dcountry$date))
print( dcountrymin )
}
for (i in 1:length(dcountries)) {
dcountry <- dcountries[[i]]
dcountrymin <- min(as.Date(dcountry$date))
print( dcountrymin )
}
for (i in 1:length(dcountries)) {
dcountry <- dcountries[[i]]
print(dcountry[[country]])
dcountrymin <- min(as.Date(dcountry$date))
print( dcountrymin )
}
for (i in 1:length(dcountries)) {
dcountry <- dcountries[[i]]
print(dcountry[["country"]])
dcountrymin <- min(as.Date(dcountry$date))
print( dcountrymin )
}
for (i in 1:length(dcountries)) {
dcountry <- dcountries[[i]]
print(dcountry[["country"],c(1)])
dcountrymin <- min(as.Date(dcountry$date))
print( dcountrymin )
}
for (i in 1:length(dcountries)) {
dcountry <- dcountries[[i]]
print(dcountry[["country"]],c(1)])
dcountrymin <- min(as.Date(dcountry$date))
print( dcountrymin )
}
for (i in 1:length(dcountries)) {
dcountry <- dcountries[[i]]
print( dcountry[ dcountry[["country"]] , c(1)] )
dcountrymin <- min(as.Date(dcountry$date))
print( dcountrymin )
}
for (i in 1:length(dcountries)) {
dcountry <- dcountries[[i]]
print( as.character(dcountry[["country"]]) )
dcountrymin <- min(as.Date(dcountry$date))
print( dcountrymin )
}
