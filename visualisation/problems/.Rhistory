#Range
n <- 1:c
b <- g / c
n * b - s * 2
#Grid
g <- 50 * 16 + 10 * 16 #| 960
#Space
s <- 10
#Margin
m <- 0
#Columns
c <- 16
#Range
n <- 1:c
b <- g / c
n * b - s * 3
#Grid
g <- 50 * 16 + 10 * 16 #| 960
#Space
s <- 10
#Margin
m <- 0
#Columns
c <- 16
#Range
n <- 1:c
b <- g / c
n * b - s * 2
#Grid
g <- 50 * 16 + 10 * 16 #| 960
#Space
s <- 10
#Margin
m <- 0
#Columns
c <- 16
#Range
n <- 0:c
b <- g / c
n * b - s * 2
#Grid
g <- 50 * 16 + 10 * 16 #| 960
#Space
s <- 10
#Margin
m <- 0
#Columns
c <- 16
#Range
n <- 0:c
b <- g / c
n * b - s * 2 + 20
#Grid
g <- 50 * 16 + 10 * 16 #| 960
#Space
s <- 10
#Margin
m <- 0
#Columns
c <- 16
#Range
n <- 0:c
b <- 50
n * b - s * 2 + 20
#Grid
g <- 50 * 16 + 10 * 16 #| 960
#Space
s <- 10
#Margin
m <- 0
#Columns
c <- 16
#Range
n <- 0:c
b <- 50
n * b - s * 2
f = 960
n = 1
c = 16
g = 10
f = n(c) + n-1(g)
n-1(g)
n*c + n-1*g
f = 960
n = 1:16
c = 16
g = 10
f = n*c + n-1*g
f
install.packages("tm")
library(tm)
?findAssocs
data("crude")
tdm <- TermDocumentMatrix(crude)
findAssocs(tdm, c("oil", "opec", "xyz"), c(0.7, 0.75, 0.1))
crude
tdm
findAssocs(tdm, c("oil", "opec", "xyz"), c(0.7, 0.75, 0.1))
data("crude")
tdm <- TermDocumentMatrix(crude)
findAssocs(tdm, c("oil", "opec", "xyz"), c(0.5)
data("crude")
tdm <- TermDocumentMatrix(crude)
findAssocs(tdm, c("oil", "opec", "xyz"), c(0.5))
data("crude")
tdm <- TermDocumentMatrix(crude)
findAssocs(tdm, c("oil", "opec", "xyz"), c(0.9))
data("crude")
tdm <- TermDocumentMatrix(crude)
findAssocs(tdm, c("oil", "opec", "xyz"), c(0.7))
docs <- c("This is a text.", "This another one.")
vs <- VectorSource(docs)
elem <- getElem(stepNext(vs))
(result <- readPlain(elem, "en", "id1"))
meta(result)
result
ds <- readTabular(data.frame(c("kip")))
ds <- TermDocumentMatrix(ds)
findAssocs(ds, c("oil", "opec", "xyz"), c(0.7))
data.frame(c("kip"))
ds <- readTabular(
data.frame(c("kip"))
)
ds
ds <- readTabular(
data.frame(c("kip"))
)
extractContentDOM("http://jeroensteen.nl/cv", 0.8, asText = TRUE)
install.packages("tm.plugin.webmining")
library(tm.plugin.webmining)
extractContentDOM("http://jeroensteen.nl/cv", 0.8, asText = TRUE)
library(tm)
extractContentDOM("http://jeroensteen.nl/cv", 0.8, asText = TRUE)
install.packages("arules")
library(arules)
library(arules)
rules <- apriori(titanic.raw)
inspect(rules)
library(arules)
rules <- apriori(titanic)
inspect(rules)
titanic
ds <- data.frame(c(
"kaas",
"tomaat"
))
rules <- apriori(ds)
inspect(rules)
inspect(rules)
inspect(rules)
rules
library(arules)
ds <- data.frame(c(
"kaas",
"tomaat"
))
rules <- apriori(ds)
rules = apriori(ds, parameter=list(
support=0.01,
confidence=0.5)
)
inspect(rules)
library(arules)
ds <- data.frame(
c("kaas","tomaat"),
c("kaas", "tomaat", "komkommer"),
c("tomaat")
))
rules <- apriori(ds)
rules = apriori(ds, parameter=list(
support=0.01,
confidence=0.5)
)
inspect(rules)
library(arules)
ds <- data.frame(
c("kaas","tomaat"),
c("kaas", "tomaat", "komkommer"),
c("tomaat")
))
rules <- apriori(ds)
rules = apriori(ds, parameter=list(
support=0.01,
confidence=0.5)
)
inspect(rules)
ds <- data.frame(
c("kaas","tomaat"),
c("kaas", "tomaat", "komkommer"),
c("tomaat")
))
library(arules)
ds <- data.frame(
c("kaas","tomaat"),
c("kaas", "tomaat", "komkommer"),
c("tomaat")
)
rules <- apriori(ds)
rules = apriori(ds, parameter=list(
support=0.01,
confidence=0.5)
)
inspect(rules)
ds <- data.frame(
c("kaas","tomaat"),
c("kaas", "tomaat", "komkommer"),
c("tomaat")
)
ls <- list(
c("kaas","tomaat"),
c("kaas", "tomaat", "komkommer"),
c("tomaat")
)
length(ls)
ls <- list(
c("kaas","tomaat"),
c("kaas", "tomaat", "komkommer"),
c("tomaat")
)
names(ls) <- paste("tr",c(1:ls(length)), sep = "")
names(ls) <- paste("tr", c(1:length(ls)), sep = "")
ls
library(arules)
ls <- list(
c("kaas","tomaat"),
c("kaas", "tomaat", "komkommer"),
c("tomaat")
)
#Set transaction names
names(ls) <- paste("tr", c(1:length(ls)), sep = "")
#Coerce into transactions
trans <- as(a_list, "transactions")
#Analyze transactions
summary(trans)
library(arules)
ls <- list(
c("kaas","tomaat"),
c("kaas", "tomaat", "komkommer"),
c("tomaat")
)
#Set transaction names
names(ls) <- paste("tr", c(1:length(ls)), sep = "")
#Coerce into transactions
trans <- as(a_list, "transactions")
#Analyze transactions
summary(trans)
library(arules)
ls <- list(
c("kaas","tomaat"),
c("kaas", "tomaat", "komkommer"),
c("tomaat")
)
#Set transaction names
names(ls) <- paste("tr", c(1:length(ls)), sep = "")
#Coerce into transactions
trans <- as(ls, "transactions")
#Analyze transactions
summary(trans)
inspect(trans)
library(arules)
ls <- list(
c("kaas","tomaat"),
c("kaas", "tomaat", "komkommer"),
c("tomaat")
)
#Set transaction names
names(ls) <- paste("tr", c(1:length(ls)), sep = "")
#Coerce into transactions
trans <- as(ls, "transactions")
#Analyze transactions
summary(trans)
inspect(trans)
rules <- apriori(ds)
rules = apriori(trans, parameter=list(
support=0.01,
confidence=0.5),
target="rules"
)
inspect(head(sort(rules,by="lift"),n=length(ls)))
#http://www.public.iastate.edu/~vardeman/stat502x/A%20Priori%20Algorithm%20R%20Example.pdf
library(arules)
ls <- list(
c("kaas","tomaat"),
c("kaas", "tomaat", "komkommer"),
c("tomaat")
)
#Set transaction names
names(ls) <- paste("tr", c(1:length(ls)), sep = "")
#Coerce into transactions
trans <- as(ls, "transactions")
#Analyze transactions
summary(trans)
inspect(trans)
rules <- apriori(trans, parameter=list(
support=0.01,
confidence=0.5),
target="rules"
)
inspect(head(sort(rules,by="lift"),n=length(ls)))
rules <- apriori(trans, parameter=list(
support=0.01,
confidence=0.5,
target="rules"),
)
inspect(head(sort(rules,by="lift"),n=length(ls)))
survey <- read.table(text =
"V1 V2 V3 V4 V5 V6 V7 V8 V9 V10
5 6 5 5 5 5 5 4 5 5
2 1 2 2 2 2 2 3 2 2",
header = TRUE)
barplot(
as.matrix(survey),
col=c("green","red"),
xlab="Vragen",
ylab="Respondenten"
)
par(mfrow=c(1, 1), mar=c(3, 3, 3, 30))
legend(x = 10, y = 10,
legend = c("Mee eens", "Overgeslagen"),
fill = c("green", "red"))
legend(x = 10, y = 10,
legend = c("Mee eens", "Overgeslagen"),
fill = c("green", "red"))
legend(x = 10, y = 10,
legend = c("Mee eens", "Overgeslagen"),
fill = c("green", "red"))
legend("center",
legend = c("Mee eens", "Overgeslagen"),
fill = c("green", "red"))
legend("center",
legend = c("Mee eens", "Overgeslagen"),
fill = c("green", "red"))
legend("center",
legend = c("Mee eens", "Overgeslagen"),
fill = c("green", "red"))
par(mfrow=c(1, 1), mar=c(0, 0, 0, 0))
legend("center",
legend = c("Mee eens", "Overgeslagen"),
fill = c("green", "red"))
legend("center",
legend = c("Mee eens", "Overgeslagen"),
fill = c("green", "red"))
par(mfrow=c(1, 1), mar=c(0, 0, 0, 0))
par(mfrow=c(1, 1), mar=c(0, 0, 0, 0))
legend("center",
legend = c("Mee eens", "Overgeslagen"),
fill = c("green", "red"))
legend("topleft",
legend = c("Mee eens", "Overgeslagen"),
fill = c("green", "red"))
legend("right",
legend = c("Mee eens", "Overgeslagen"),
fill = c("green", "red"))
par(mfrow=c(1, 2), mar=c(0, 0, 0, 0))
survey <- read.table(text =
"V1 V2 V3 V4 V5 V6 V7 V8 V9 V10
5 6 5 5 5 5 5 4 5 5
2 1 2 2 2 2 2 3 2 2",
header = TRUE)
barplot(
as.matrix(survey),
col=c("green","red"),
xlab="Vragen",
ylab="Respondenten"
)
legend("right",
legend = c("Mee eens", "Overgeslagen"),
fill = c("green", "red"))
legend("right",
legend = c("Mee eens", "Overgeslagen"),
fill = c("green", "red"))
legend("right",
legend = c("Mee eens", "Overgeslagen"),
fill = c("green", "red"))
legend("right",
legend = c("Mee eens", "Overgeslagen"),
fill = c("green", "red"))
par(mfrow=c(1, 2), mar=c(0, 0, 0, 0))
survey <- read.table(text =
"V1 V2 V3 V4 V5 V6 V7 V8 V9 V10
5 6 5 5 5 5 5 4 5 5
2 1 2 2 2 2 2 3 2 2",
header = TRUE)
barplot(
as.matrix(survey),
col=c("green","red"),
xlab="Vragen",
ylab="Respondenten"
)
par(mfrow=c(1, 2), mar=c(0, 0, 0, 0))
survey <- read.table(text =
"V1 V2 V3 V4 V5 V6 V7 V8 V9 V10
5 6 5 5 5 5 5 4 5 5
2 1 2 2 2 2 2 3 2 2",
header = TRUE)
barplot(
as.matrix(survey),
col=c("green","red"),
xlab="Vragen",
ylab="Respondenten"
)
par(mfrow=c(1, 2), mar=c(0, 0, 0, 0))
survey <- read.table(text =
"V1 V2 V3 V4 V5 V6 V7 V8 V9 V10
5 6 5 5 5 5 5 4 5 5
2 1 2 2 2 2 2 3 2 2",
header = TRUE)
barplot(
as.matrix(survey),
col=c("green","red"),
xlab="Vragen",
ylab="Respondenten"
)
par(mfrow=c(1, 1), mar=c(0, 0, 0, 0))
survey <- read.table(text =
"V1 V2 V3 V4 V5 V6 V7 V8 V9 V10
5 6 5 5 5 5 5 4 5 5
2 1 2 2 2 2 2 3 2 2",
header = TRUE)
barplot(
as.matrix(survey),
col=c("green","red"),
xlab="Vragen",
ylab="Respondenten"
)
par(mfrow=c(1, 1), mar=c(0, 0, 0, 0))
survey <- read.table(text =
"V1 V2 V3 V4 V5 V6 V7 V8 V9 V10
5 6 5 5 5 5 5 4 5 5
2 1 2 2 2 2 2 3 2 2",
header = TRUE)
barplot(
as.matrix(survey),
col=c("green","red"),
xlab="Vragen",
ylab="Respondenten"
)
survey <- read.table(text =
"V1 V2 V3 V4 V5 V6 V7 V8 V9 V10
5 6 5 5 5 5 5 4 5 5
2 1 2 2 2 2 2 3 2 2",
header = TRUE)
barplot(
as.matrix(survey),
col=c("green","red"),
xlab="Vragen",
ylab="Respondenten"
)
par(mfrow=c(1, 1), mar=c(5,5,5,5))
survey <- read.table(text =
"V1 V2 V3 V4 V5 V6 V7 V8 V9 V10
5 6 5 5 5 5 5 4 5 5
2 1 2 2 2 2 2 3 2 2",
header = TRUE)
barplot(
as.matrix(survey),
col=c("green","red"),
xlab="Vragen",
ylab="Respondenten"
)
par(mfrow=c(1, 1), mar=c(5,5,5,5))
survey <- read.table(text =
"V1 V2 V3 V4 V5 V6 V7 V8 V9 V10
5 6 5 5 5 5 5 4 5 5
2 1 2 2 2 2 2 3 2 2",
header = TRUE)
barplot(
as.matrix(survey),
col=c("green","red"),
xlab="Vragen",
ylab="Respondenten",
main="Mini enquÃªte"
)
par(mfrow=c(1, 1), mar=c(5,5,5,5))
1-dbinom(48,50,1/100)
dbinom(48,50,1-1/100)
dbinom(48,50,99/100)
setwd("C:/Users/Wim/Desktop/data_science/visualisation/problems")
plot(2*1:10+1)
plot ( 1:10 * 2 ^ 0:10 )
plot ( 1:10 * (2 ^ 0:10) )
plot ( 1:10 * (2 ^ 0:10) * (2 ^ 0:10) )
plot ( 1:10 * (2 ^ 0:10) * (2 ^ 0:10) )
x = -10:10
y = (1.5 ^ 1.5) ^ x
plot(x, y)
x = 1:10
y = log(x,2)
plot(x,y)
polyroot(c(1,2,3))
plot( polyroot(c(1,2,3)) )
plot( polyroot(c(1,2,3)), 1 )
plot( polyroot(c(1,2,3), 1) )
plot( polyroot(c(1,2,3), c(1)) )
plot( 1000000*x^3-998000*x^2-1001999*x+999999  )
plot( -10:10  )
curve( -10:10  )
curve( -10:10  )
curve( c(1,2)  )
curve( c(1,2)  )
#4
curve( c(1,2),c(1,2)  )
?curve
curve(c(1,2), from=-10, to=10)
plot(-10:10^3+2)
plot(0:10^3+2)
plot(0:10^3+2)
x = (-10:10)^3+2
plot(x, x+1^3)
x = -10:10
plot(1*x^3 + 2*x^2 + 3*x + 1)
plot(2*x^4 + 6*x - 5)
